#!/bin/sh
#
# openvpn       This shell script takes care of starting and stopping
#               openvpn.
#
# chkconfig: 345 80 30
#
# description: OpenVPN is a robust and highly flexible tunneling application that
#              uses all of the encryption, authentication, and certification features
#              of the OpenSSL library to securely tunnel IP networks over a single
#              UDP port.
#

# Source function library.
. /etc/rc.d/init.d/functions

# Source networking configuration.
. /etc/sysconfig/network

# Check that networking is up.
[ ${NETWORKING} = "no" ] && exit 0

[ -f /usr/sbin/openvpn ] || exit 0

# See how we were called.
case "$1" in
  start)
	gprintf "Starting openvpn: "

	/sbin/modprobe tun
	echo 1 > /proc/sys/net/ipv4/ip_forward

	if [ ! -d  /var/run/openvpn ]; then
	  mkdir /var/run/openvpn
	fi

	cd /etc/openvpn

	# Start every .conf in /etc/openvpn and run .sh if exists
	errors=0
	for c in `/bin/ls *.conf 2>/dev/null`; do
	  bn=${c%%.conf}
	  if [ -e "$bn.sh" ]; then
	    . $bn.sh
	  fi
	  rm -f /var/run/openvpn/$bn.pid
	  /usr/sbin/openvpn --daemon --writepid /var/run/openvpn/$bn.pid --config $c \
	                    --cd /etc/openvpn
	  # can't detect error...
          #if [ $? != 0 ]; then
	  #  errors=1
          #fi
	done

	if [ $errors == 1 ]; then
	  failure; echo
	else
	  success; echo
	fi
	
	touch /var/lock/subsys/openvpn
	;;
  stop)
	gprintf "Shutting down openvpn: "
	for pidf in `/bin/ls /var/run/openvpn/*.pid 2>/dev/null`; do
	  kill `cat $pidf`
	  rm -f $pidf
	done
	success; echo
	rm -f /var/lock/subsys/openvpn
	;;
  restart)
	$0 stop
	$0 start
	;;
  reload)
	for pidf in `/bin/ls /var/run/openvpn/*.pid 2>/dev/null`; do
	  kill -HUP `cat $pidf`
	done
	;;
  reopen)
	for pidf in `/bin/ls /var/run/openvpn/*.pid 2>/dev/null`; do
	  kill -USR1 `cat $pidf`
	done
	;;
  status)
	for pidf in `/bin/ls /var/run/openvpn/*.pid 2>/dev/null`; do
	  kill -USR2 `cat $pidf`
	done
	echo "Status written to /var/log/messages"
	;;
  *)
	gprintf "Usage: %s {start|stop|restart|reload|reopen|status}\n" "$0"
	exit 1
esac

exit 0
